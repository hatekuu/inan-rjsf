{"version":3,"file":"static/js/943.124be647.chunk.js","mappings":"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","sources":["routers/userConfig/interact/login.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport * as Realm from 'realm-web';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const app = useMemo(() => new Realm.App({ id: process.env.REACT_APP_KEY }), []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []); // Empty dependency array means it runs once on mount\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      if (app.currentUser?.customData?.type === \"normal\") {\r\n        navigate('/inan-rjsf/products');\r\n      } else if (app.currentUser?.customData?.type === \"Admin\") {\r\n        navigate('/inan-rjsf/admin/addproduct')\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  const loginEmailPassword = async () => {\r\n    if (isLoading) {\r\n      return; // Avoid pressing the button multiple times while processing\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const credentials = Realm.Credentials.emailPassword(email, password);\r\n      const user = await app.logIn(credentials);\r\n      if (user.customData?.type === \"normal\") {\r\n        navigate('/inan-rjsf/products');\r\n      } else if (user.customData?.type === \"Admin\") {\r\n        navigate('/inan-rjsf/admin/addproduct')\r\n      }\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGoogleAuth = async () => {\r\n    try {\r\n      const redirectUrl = \"http://localhost:3000/inan-rjsf/api/auth/callback/google\";\r\n      const credentials = Realm.Credentials.google({ redirectUrl });\r\n      const user = await app.logIn(credentials);\r\n\r\n      if (user.customData?.type === \"normal\") {\r\n        navigate('/inan-rjsf/products');\r\n      } else if (user.customData?.type === \"Admin\") {\r\n        navigate('/inan-rjsf/admin/addproduct')\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n      <div className=\"bg-white p-8 rounded shadow-md w-96 border border-gray-300\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-center\">Đăng Nhập</h2>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            className=\"w-full px-3 py-2 border rounded border-gray-300 focus:outline-none focus:border-indigo-500\"\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n            Mật khẩu:\r\n          </label>\r\n          <input\r\n            className=\"w-full px-3 py-2 border rounded border-gray-300 focus:outline-none focus:border-indigo-500\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button\r\n          className={`w-full bg-indigo-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ${\r\n            isLoading ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n          onClick={loginEmailPassword}\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? 'Đang đăng nhập...' : 'Đăng nhập'}\r\n        </button>\r\n        <p className=\"mt-4 text-center\">\r\n          Chưa có tài khoản? <Link to=\"/inan-rjsf/register\" className=\"text-indigo-500\">Đăng ký</Link>\r\n        </p>\r\n        <p className=\"mt-4 text-center\">\r\n          Quên mật khẩu? <Link to=\"/inan-rjsf/resetpassword\" className=\"text-indigo-500\">Tìm mật khẩu ngay!</Link>\r\n        </p>\r\n        <div className=\"flex items-center justify-center mt-4  mb-4\">\r\n          <span className=\"mr-4 border-b w-1/4\"></span>\r\n          <p>Hoặc</p>\r\n          <span className=\"ml-4 border-b w-1/4\"></span>\r\n        </div>\r\n        <button\r\n          className={`w-full bg-indigo-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ${\r\n            isLoading ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n          onClick={handleGoogleAuth}\r\n          disabled={isLoading}\r\n        >\r\n          Đăng nhập bằng Google\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n  \r\n        };  \r\nexport default Login;\r\n"],"names":["Login","email","setEmail","useState","password","setPassword","isLoading","setIsLoading","navigate","useNavigate","app","useMemo","Realm","id","process","useEffect","fetchData","async","_app$currentUser","_app$currentUser$cust","_app$currentUser2","_app$currentUser2$cus","currentUser","customData","type","error","console","_jsx","className","children","_jsxs","htmlFor","value","onChange","e","target","concat","onClick","_user$customData","_user$customData2","credentials","emailPassword","user","logIn","disabled","Link","to","_user$customData3","_user$customData4","redirectUrl","google"],"sourceRoot":""}