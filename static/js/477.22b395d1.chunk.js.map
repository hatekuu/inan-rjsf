{"version":3,"file":"static/js/477.22b395d1.chunk.js","mappings":"yIAEA,MAqDA,EArDcA,IAA0C,IAAzC,OAAEC,EAAM,QAAEC,EAAO,QAAEC,EAAO,MAAEC,GAAOJ,EAChD,MAAOK,EAAWC,IAAgBC,EAAAA,EAAAA,UAASN,IAE3CO,EAAAA,EAAAA,YAAU,KACRF,EAAaL,EAAO,GACnB,CAACA,IAUJ,OACEQ,EAAAA,EAAAA,MAAA,OACEC,UAAS,wFAAAC,OACPN,EAAY,cAAgB,iCAC3BO,SAAA,EAEHC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gEACfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wHAAuHE,SAAA,EACpIC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,6BAA4BE,UACzCC,EAAAA,EAAAA,KAAA,UACEH,UAAU,oCACVI,QAnBUC,KAClBT,GAAa,GACbJ,IACc,IAAVE,GACFY,OAAOC,SAASC,QAAO,EACzB,EAc6BN,UAErBC,EAAAA,EAAAA,KAAA,OACEH,UAAU,uBACVS,QAAQ,YACRC,MAAM,6BAA4BR,UAElCC,EAAAA,EAAAA,KAAA,QAAMQ,EAAE,gNAIdR,EAAAA,EAAAA,KAAA,OAAKH,UAAU,MAAKE,SACjBU,MAAMC,QAAQpB,GACbA,EAAQqB,KAAI,CAACC,EAAKC,KAChBb,EAAAA,EAAAA,KAAA,OAAiBH,UAAU,OAAME,SAC9Ba,GADOC,MAKZb,EAAAA,EAAAA,KAAA,KAAAD,SAAIT,WAIN,C,qHC3CV,MAgSA,EAhSewB,KAAO,IAADC,EACjB,MAAMC,EAAM,IAAIC,EAAAA,GAAU,CAAEC,GAAIC,kCACzBC,EAAKC,IAAU3B,EAAAA,EAAAA,UAAS,KACxB4B,EAAeC,IAAoB7B,EAAAA,EAAAA,UAAS,CAAC,IAC7C8B,EAAYC,IAAiB/B,EAAAA,EAAAA,UAAS,CAAC,IACvCgC,EAAUC,IAAejC,EAAAA,EAAAA,UAAS,CAAC,IACnCkC,EAAQC,IAAYnC,EAAAA,EAAAA,UAAS,KAC7BoC,EAASC,IAAcrC,EAAAA,EAAAA,WAAS,IAChCsC,EAAKC,IAASvC,EAAAA,EAAAA,UAAS,KACvBwC,EAASC,IAAazC,EAAAA,EAAAA,WAAS,IAC/B0C,EAAMC,IAAW3C,EAAAA,EAAAA,UAAS,KAC1B4C,EAASC,IAAc7C,EAAAA,EAAAA,WAAS,IAChC8C,EAAUC,IAAe/C,EAAAA,EAAAA,UAAS,KAClCgD,EAAKC,IAAUjD,EAAAA,EAAAA,UAAS,MACzBkD,GAAWC,EAAAA,EAAAA,OAChBlD,EAAAA,EAAAA,YAAU,KACTmD,GAAoB,GACpB,IACF,MAAMA,EAAqBC,UACzB,IAAK,IAADC,EAAAC,EACiB,QAAhBD,EAAChC,EAAIkC,mBAAW,IAAAF,GAAfA,EAAiBG,aAAcP,EAAS,0BACnC,OAAH5B,QAAG,IAAHA,GAAgB,QAAbiC,EAAHjC,EAAKkC,mBAAW,IAAAD,OAAb,EAAHA,EAAkBH,sBAExBzB,EAAW,OAAHL,QAAG,IAAHA,OAAG,EAAHA,EAAKkC,YACf,CAAE,MAAOE,GAAQ,IAADC,EACK,QAAhBA,EAACrC,EAAIkC,mBAAW,IAAAG,GAAfA,EAAiBF,aAAcP,EAAS,mBAC9C,GAEIU,EAAYP,UAEd,IAAK,IAADQ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEI,MAAMC,EAAe,OACfC,QAAoB,OAAHrD,QAAG,IAAHA,GAAgB,QAAbuC,EAAHvC,EAAKkC,mBAAW,IAAAK,OAAb,EAAHA,EAAkBe,aAAaF,IAChDpC,QAAYhB,EAAIkC,YAAYqB,oBAClCtC,EAAQD,GACNwC,QAAQC,IAAIzC,GACdH,EAAqB,QAAZ2B,EAACa,EAAS,UAAE,IAAAb,GAAQ,QAARC,EAAXD,EAAakB,cAAM,IAAAjB,GAAQ,QAARC,EAAnBD,EAAqB7B,cAAM,IAAA8B,OAAhB,EAAXA,EAA6BiB,UACrCtC,EAAoB,QAAZsB,EAACU,EAAS,UAAE,IAAAV,GAAQ,QAARC,EAAXD,EAAae,cAAM,IAAAd,GAAO,QAAPC,EAAnBD,EAAqBxB,aAAK,IAAAyB,OAAf,EAAXA,EAA4Bc,UACvClD,EAAyB,QAAZqC,EAACO,EAAS,UAAE,IAAAP,GAAQ,QAARC,EAAXD,EAAaY,cAAM,IAAAX,GAAO,QAAPC,EAAnBD,EAAqB3B,aAAK,IAAA4B,OAAf,EAAXA,EAA4BxC,YAC1CG,EAAuB,QAAZsC,EAACI,EAAS,UAAE,IAAAJ,GAAQ,QAARC,EAAXD,EAAaS,cAAM,IAAAR,GAAO,QAAPC,EAAnBD,EAAqB9B,aAAK,IAAA+B,OAAf,EAAXA,EAA4BzC,UAExCK,GAAW,EAEnB,CAAE,MAAOqB,GACLoB,QAAQpB,MAAM,2BAA4BA,GAC1CrB,GAAW,EACf,IAGJpC,EAAAA,EAAAA,YAAW,KAEP2D,GAAW,GACb,IAqGJ,OACE1D,EAAAA,EAAAA,MAAAgF,EAAAA,SAAA,CAAA7E,SAAA,CACC+B,GACC9B,EAAAA,EAAAA,KAAA,OAAKH,UAAU,4CAA2CE,UACxDC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wBAAuBE,SAAC,kBAGzCH,EAAAA,EAAAA,MAAAgF,EAAAA,SAAA,CAAA7E,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sBAAqBE,SACnCqB,IACPpB,EAAAA,EAAAA,KAAA4E,EAAAA,SAAA,CAAA7E,SACGmC,GACAlC,EAAAA,EAAAA,KAAC6E,EAAAA,GAAI,CACLhF,UAAU,oDACViF,UAAWA,EAAAA,GACXC,OAAQvD,EACRE,SAAUA,EACVsD,SApHcjC,UAAyB,IAADkC,EAAA,IAAjB,SAAEC,GAAU/F,EACtC,MACMgG,EAAK,CAACD,EAAY,OAAHlE,QAAG,IAAHA,GAAgB,QAAbiE,EAAHjE,EAAKkC,mBAAW,IAAA+B,OAAb,EAAHA,EAAkB/D,IACvC,GAAIgE,EACJ,IAAK,IAADE,EAEH,MAAMC,QAAkB,OAAHrE,QAAG,IAAHA,GAAgB,QAAboE,EAAHpE,EAAKkC,mBAAW,IAAAkC,OAAb,EAAHA,EAAkBd,aALnB,mBAKgDa,IACrE7B,IACGf,GAAW,GACXE,EAAkB,OAAN4C,QAAM,IAANA,OAAM,EAANA,EAAQ/F,SACpBqD,EAAO,GACPR,GAAY,EAEf,CAAE,MAAOiB,GACPoB,QAAQC,IAAIrB,EACd,MAEEE,GACF,KAqGMtD,EAAAA,EAAAA,KAAA,UACAC,QAASA,IAAMkC,GAAY,GAC3BtC,UAAU,0LAAyLE,SACpM,qBAWIU,MAAMC,QAAc,OAANkB,QAAM,IAANA,OAAM,EAANA,EAAQ0D,YAAmB,OAAN1D,QAAM,IAANA,OAAM,EAANA,EAAQ0D,SAASC,QAAS,GACpEvF,EAAAA,EAAAA,KAAA4E,EAAAA,SAAA,CAAA7E,UACAH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeE,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,6BAA4BE,SAAC,qCAC3CC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kBAAiBE,UAC9BH,EAAAA,EAAAA,MAAA,SAAOC,UAAU,sCAAqCE,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAOH,UAAU,aAAYE,UAC3BH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIwF,MAAM,MAAM3F,UAAU,yFAAwFE,SAAC,+BACnHC,EAAAA,EAAAA,KAAA,MAAIwF,MAAM,MAAM3F,UAAU,yFAAwFE,SAAC,uCACnHC,EAAAA,EAAAA,KAAA,MAAIwF,MAAM,MAAM3F,UAAU,yFAAwFE,SAAC,iBAGvHC,EAAAA,EAAAA,KAAA,SAAOH,UAAU,oCAAmCE,SAC3C,OAAN6B,QAAM,IAANA,OAAM,EAANA,EAAQ0D,SAAS3E,KAAI,CAAC8E,EAAS5E,KAC9BjB,EAAAA,EAAAA,MAAA,MAAgBC,UAAU,mCAAkCE,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,MACEH,UAAU,8CACVI,QAASA,IAjII8C,WAAiB,IAAD2C,EACvC,MACMP,EAAM,CAACM,EAAW,OAAHzE,QAAG,IAAHA,GAAgB,QAAb0E,EAAH1E,EAAKkC,mBAAW,IAAAwC,OAAb,EAAHA,EAAkBxE,IACvCsD,QAAQC,IAAI,eAAegB,GAC3B,IACE,MAAME,QAAiB3E,EAAIkC,YAAYoB,aAJvB,eAIoDa,GACpE5C,GAAW,GACXE,EAAYkD,EAASrG,SACrBkF,QAAQC,IAAIkB,GACZhD,EAAO,GACPW,GACF,CAAE,MAAOF,GACPb,GAAW,GACXE,EAAYW,EAAMA,MACpB,GAmHyBwC,CAAiBH,GAChCI,aAAeC,GAAMA,EAAEC,OAAOC,UAAUC,IAAI,eAC5CC,aAAeJ,GAAMA,EAAEC,OAAOC,UAAUG,OAAO,eAAepG,SAE7D0F,EAAQW,eAEXpG,EAAAA,EAAAA,KAAA,MAAIH,UAAU,8CAA6CE,SACxD0F,EAAQY,YAEXrG,EAAAA,EAAAA,KAAA,MAAIH,UAAU,8CAA6CE,SACxD0F,EAAQa,iBAbJzF,kBAwBjBjB,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,KAACC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,6BAA4BE,SAAC,oCAAuB,KAACC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,8BAA6BE,SAAC,mCAEvHU,MAAMC,QAAQsB,EAAKA,OAASA,EAAKA,KAAKuD,OAAS,GAC9CvF,EAAAA,EAAAA,KAAA4E,EAAAA,SAAA,CAAA7E,UACCH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeE,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,6BAA4BE,SAAC,4DAC3CH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBE,SAAA,EAC9BH,EAAAA,EAAAA,MAAA,SAAOC,UAAU,sCAAqCE,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAOH,UAAU,aAAYE,UAC3BH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIwF,MAAM,MAAM3F,UAAU,yFAAwFE,SAAC,+BACnHC,EAAAA,EAAAA,KAAA,MAAIwF,MAAM,MAAM3F,UAAU,yFAAwFE,SAAC,6BACnHC,EAAAA,EAAAA,KAAA,MAAIwF,MAAM,MAAM3F,UAAU,yFAAwFE,SAAC,iBAGvHC,EAAAA,EAAAA,KAAA,SAAOH,UAAU,oCAAmCE,SACxC,QADwCgB,EACjDiB,EAAKA,YAAI,IAAAjB,OAAA,EAATA,EAAWJ,KAAI,CAAC8E,EAAS5E,KACxBjB,EAAAA,EAAAA,MAAA,MAAgBC,UAAU,mCAAkCE,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,8CAA8CI,QAASA,IAxJnD8C,WAAiB,IAADwD,EAC1C,MACMpB,EAAM,CAAI,OAAHnE,QAAG,IAAHA,GAAgB,QAAbuF,EAAHvF,EAAKkC,mBAAW,IAAAqD,OAAb,EAAHA,EAAkBrF,GAAGuE,EAAQe,IAAIC,MAC9CjC,QAAQC,IAAI,eAAegB,GAC3B,IACE,MAAME,QAAiB3E,EAAIkC,YAAYoB,aAJvB,iBAIoDa,GACpE5C,GAAW,GACXE,EAAYkD,EAASrG,SACrBqD,EAAO,GACPW,GACF,CAAE,MAAOF,GACPoB,QAAQC,IAAIrB,EAAMA,MACpB,GA4ImFsD,CAAoBjB,GAAS1F,SACrG0F,EAAQW,eAEXpG,EAAAA,EAAAA,KAAA,MAAIH,UAAU,8CAA6CE,UACzDC,EAAAA,EAAAA,KAAA,SACE2G,KAAK,SACL9G,UAAU,2CACV+G,MAAOtF,EAAcmE,EAAQe,IAAIC,OAAS,EAC1CI,SAAWf,GAlJI/C,OAAO+C,EAAGgB,KAAe,IAADC,EACnD,MAAMC,EAAWC,SAASnB,EAAEC,OAAOa,MAAO,IAC5CrF,EAAiB,IAAKD,EAAe,CAACwF,GAAYE,IACjD,MACM7B,EAAK,CAAI,OAAHnE,QAAG,IAAHA,GAAgB,QAAb+F,EAAH/F,EAAKkC,mBAAW,IAAA6D,OAAb,EAAHA,EAAkB7F,GAAG4F,EAAUE,GAE3C,IAAK,IAADE,EACH,MAAMvB,QAAoB,OAAH3E,QAAG,IAAHA,GAAgB,QAAbkG,EAAHlG,EAAKkC,mBAAW,IAAAgE,OAAb,EAAHA,EAAkB5C,aAJvB,gBAIoDa,IAEhD,kCAAnBQ,EAASrG,UACViD,GAAW,GACXE,EAAYkD,EAASrG,SACrBqD,EAAO,GACPpB,EAAiB,IAAKD,EAAe,CAACwF,GAAY,IAErD,CAAE,MAAO1D,GACRb,GAAW,GACPE,EAAYW,EAAMA,OAClBT,EAAO,EACZ,GA+H8BwE,CAAqBrB,EAAGL,EAAQe,IAAIC,WAGzD7G,EAAAA,EAAAA,MAAA,MAAIC,UAAU,8CAA6CE,SAAA,CACxD0F,EAAQa,aAAac,WAAW,gCAb5BvG,WAmBfjB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BE,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,UAAQC,QAASqD,EAAWzD,UAAU,gDAA+CE,SAAC,uBACtFH,EAAAA,EAAAA,MAAA,KAAGC,UAAU,OAAME,SAAA,CAAC,wBAAY6B,EAAOyF,WAAW,+BAClDrH,EAAAA,EAAAA,KAAA,UAAQC,QA1IQ8C,UAChB,IAAK,IAAIuE,EAAI,EAAGA,EAAItF,EAAKA,KAAKuD,OAAQ+B,IAEpC/F,EAAiB,IAAKD,EAAe,CAACU,EAAKA,KAAKsF,GAAGd,IAAIC,MAAO,IAE3D,MAEItB,EAAK,CAACnD,EAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMA,MACxB,IACA,MAAMqD,QAAcrE,EAAIkC,YAAYoB,aAJf,gBAI4Ca,GAClE5C,GAAW,GACXE,EAAY4C,EAAO/F,SACnBqD,EAAO,GACLW,GAED,CAAE,MAAOF,GAERb,GAAW,GACXE,EAAYW,EAAMA,OAClBT,EAAO,EACR,GAsHyB9C,UAAU,iDAAgDE,SAAC,sCAOzFH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,6BAA4BE,SAAC,4DAC3CC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,8BAA6BE,SAAC,uCAM5CC,EAAAA,EAAAA,KAACuH,EAAAA,EAAK,CAACnI,OAAQkD,EAASjD,QAnIRmI,KAEjBjF,GAAW,EAAM,EAiI6BjD,QAASkD,EAAUjD,MAAO,MACvE,C","sources":["components/Modal.js","routers/cart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Modal = ({ isOpen, onClose, message, array }) => {\r\n  const [isVisible, setIsVisible] = useState(isOpen);\r\n\r\n  useEffect(() => {\r\n    setIsVisible(isOpen);\r\n  }, [isOpen]);\r\n\r\n  const handleClose = () => {\r\n    setIsVisible(false);\r\n    onClose();\r\n    if (array === 1) {\r\n      window.location.reload(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`fixed inset-0 z-50 flex items-center justify-center overflow-auto transition-opacity ${\r\n        isVisible ? 'opacity-100' : 'opacity-0 pointer-events-none'\r\n      }`}\r\n    >\r\n      <div className=\"fixed inset-0 bg-gray-800 bg-opacity-50 transition-opacity\"></div>\r\n      <div className=\"relative w-full max-w-md p-6 mx-auto bg-white rounded shadow-lg border border-gray-300 transition-transform transform\">\r\n        <div className=\"absolute top-0 right-0 p-2\">\r\n          <button\r\n            className=\"text-gray-600 hover:text-gray-800\"\r\n            onClick={handleClose}\r\n          >\r\n            <svg\r\n              className=\"w-6 h-6 fill-current\"\r\n              viewBox=\"0 0 24 24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path d=\"M6.293 6.293a1 1 0 011.414 0L12 10.586l4.293-4.293a1 1 0 111.414 1.414L13.414 12l4.293 4.293a1 1 0 01-1.414 1.414L12 13.414l-4.293 4.293a1 1 0 01-1.414-1.414L10.586 12 6.293 7.707a1 1 0 010-1.414z\"></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div className=\"p-4\">\r\n          {Array.isArray(message) ? (\r\n            message.map((msg, index) => (\r\n              <div key={index} className=\"mb-2\">\r\n                {msg}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>{message}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Form from \"@rjsf/core\";\r\nimport './Myform.css'; // Import file CSS\r\nimport  validator from '@rjsf/validator-ajv8';\r\nimport * as Realm from 'realm-web';\r\nimport Modal from '../components/Modal';\r\n\r\nconst MyForm = () => {\r\n    const app = new Realm.App({ id: process.env.REACT_APP_KEY });\r\n    const [user,setUser]= useState([])\r\n    const [newQuantities, setNewQuantities] = useState({});\r\n    const [jsonSchema, setjsonSchema] = useState({});\r\n    const [uiSchema, setuiSchema] = useState({});\r\n    const [output, setOutput]= useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [cart,setCart]=useState([])\r\n    const [openForm,setOpenForm]=useState(false)\r\n    const [input,setInput]= useState([])\r\n    const [isOpen2, setIsOpen2] = useState(false);\r\n    const [message2, setMessage2] = useState([]);\r\n    const [val, setVal] = useState(null);\r\n    const navigate = useNavigate();\r\n     useEffect(()=>{\r\n      refreshAccessToken()\r\n    },[])\r\n    const refreshAccessToken = async()=>{\r\n      try {\r\n        if(!app.currentUser?.accessToken) {navigate('/inan-rjsf/login');}\r\n        await app?.currentUser?.refreshAccessToken()\r\n        \r\n        setUser(app?.currentUser)\r\n      } catch (error) {\r\n        if(!app.currentUser?.accessToken) {navigate('/inan-rjsf/login');}\r\n      }\r\n    }\r\n    const fetchData = async () => {\r\n   \r\n        try {\r\n           \r\n                const functionName = \"form\";\r\n                const findCart = await app?.currentUser?.callFunction(functionName);\r\n                const cart= await app.currentUser.refreshCustomData()\r\n                setCart(cart)\r\n                  console.log(cart)\r\n                setOutput(findCart[0]?.public?.output?.jsonData)\r\n                  setInput(findCart[0]?.public?.input?.jsonData)\r\n                setjsonSchema(findCart[0]?.public?.input?.jsonSchema);\r\n                setuiSchema(findCart[0]?.public?.input?.uiSchema);\r\n\r\n                setLoading(false);\r\n            \r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect( () => {\r\n \r\n        fetchData()\r\n    },[]); // Add dependencies\r\n\r\n  const onSubmit = async ({ formData }) => {\r\nconst FunctionName = 'QueryProducts';\r\nconst args=[formData,app?.currentUser?.id]\r\nif (formData) {\r\ntry {\r\n \r\n const result=  await app?.currentUser?.callFunction(FunctionName,...args);\r\nfetchData()\r\n   setIsOpen2(true)\r\n   setMessage2(result?.message)\r\n   setVal(0)\r\n   setOpenForm(false)\r\n\r\n} catch (error) {\r\n  console.log(error)\r\n}\r\n}else{\r\n  fetchData()\r\n}\r\n          \r\n\r\n  };\r\n  const handleAddProduct = async(product)=>{\r\n    const funtionName=\"AddToCart\"\r\n    const args= [product,app?.currentUser?.id]\r\n    console.log(\"add products\",product)\r\n    try {\r\n      const response = await app.currentUser.callFunction(funtionName, ...args)\r\n      setIsOpen2(true)\r\n      setMessage2(response.message) \r\n      console.log(response)\r\n      setVal(0)\r\n      fetchData()\r\n    } catch (error) {\r\n      setIsOpen2(true)\r\n      setMessage2(error.error) \r\n    }\r\n  }\r\n  const handleRemoveProduct = async(product)=>{\r\n    const funtionName=\"DeleProduct\"\r\n    const args= [app?.currentUser?.id,product._id.$oid]\r\n    console.log(\"add products\",product)\r\n    try {\r\n      const response = await app.currentUser.callFunction(funtionName, ...args)\r\n      setIsOpen2(true)\r\n      setMessage2(response.message) \r\n      setVal(0)\r\n      fetchData()\r\n    } catch (error) {\r\n      console.log(error.error)\r\n    }\r\n  }\r\n  const handleQuantityChange = async (e, productId) => {\r\n    const newValue = parseInt(e.target.value, 10);\r\n  setNewQuantities({ ...newQuantities, [productId]: newValue });\r\n   const functionName=\"updateCart\"\r\n   const args=[app?.currentUser?.id,productId,newValue]\r\n \r\n   try {\r\n    const response = await app?.currentUser?.callFunction(functionName,...args)\r\n  \r\n    if(response.message!=='Quantity updated successfully'){\r\n      setIsOpen2(true)\r\n      setMessage2(response.message) \r\n      setVal(0)\r\n      setNewQuantities({ ...newQuantities, [productId]: 1 });\r\n    }\r\n   } catch (error) {\r\n    setIsOpen2(true)\r\n        setMessage2(error.error) \r\n        setVal(0)\r\n   }\r\n  }\r\n  const handleBuy = async()=>{\r\n    for (let i = 0; i < cart.cart.length; i++) {\r\n\r\n      setNewQuantities({ ...newQuantities, [cart.cart[i]._id.$oid]: 1 });\r\n    }\r\n         const functionName=\"ToTempCart\"\r\n  \r\n       const args=[cart, cart?.cart]\r\n       try {\r\n       const result= await app.currentUser.callFunction(functionName,...args)\r\n      setIsOpen2(true)\r\n      setMessage2(result.message) \r\n      setVal(0)\r\n        fetchData()\r\n     \r\n       } catch (error) {\r\n      \r\n        setIsOpen2(true)\r\n        setMessage2(error.error) \r\n        setVal(0)\r\n       }\r\n  }\r\n  const closeModal = ()=>{\r\n\r\n    setIsOpen2(false)\r\n  }\r\n  return (\r\n    <>\r\n    {loading ? (\r\n      <div className=\"flex items-center justify-center h-screen\">\r\n        <div className=\"text-gray-600 text-lg\">Loading...</div>\r\n      </div>\r\n    ) : (\r\n      <>\r\n        <div className=\"flex justify-center\">\r\n        {user && (\r\n  <>\r\n    {openForm ? (\r\n     <Form\r\n     className=\"w-full max-w-md p-8 bg-white rounded-lg shadow-lg\"\r\n     validator={validator}\r\n     schema={jsonSchema}\r\n     uiSchema={uiSchema}\r\n     onSubmit={onSubmit}\r\n   />\r\n    ) : (\r\n      <button\r\n      onClick={() => setOpenForm(true)}\r\n      className=\"px-4 py-2 bg-blue-500 text-white rounded-md shadow-md hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-200 transform transition duration-300 ease-in-out hover:scale-105\"\r\n    >\r\n      Mở Form\r\n    </button>\r\n    \r\n    \r\n    )}\r\n  </>\r\n)}\r\n\r\n        \r\n        </div>\r\n        {Array.isArray(output?.products) && output?.products.length > 0 ? (\r\n  <>\r\n  <div className=\"flex flex-col\">\r\n  <h2 className=\"text-lg font-semibold my-4\">Danh sách sản phẩm</h2>\r\n  <div className=\"overflow-x-auto\">\r\n    <table className=\"min-w-full divide-y divide-gray-200\">\r\n      <thead className=\"bg-gray-50\">\r\n        <tr>\r\n          <th scope=\"col\" className=\"px-2 md:px-6 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider\">Tên sản phẩm</th>\r\n          <th scope=\"col\" className=\"px-2 md:px-6 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider\">Số lượng trong kho</th>\r\n          <th scope=\"col\" className=\"px-2 md:px-6 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider\">Giá</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"bg-white divide-y divide-gray-200\">\r\n        {output?.products.map((product, index) => (\r\n          <tr key={index} className=\"hover:bg-gray-100 cursor-pointer\">\r\n            <td\r\n              className=\"px-2 md:px-6 py-4 md:py-2 whitespace-nowrap\"\r\n              onClick={() => handleAddProduct(product)}\r\n              onMouseEnter={(e) => e.target.classList.add(\"bg-gray-100\")}\r\n              onMouseLeave={(e) => e.target.classList.remove(\"bg-gray-100\")}\r\n            >\r\n              {product.productName}\r\n            </td>\r\n            <td className=\"px-2 md:px-6 py-4 md:py-2 whitespace-nowrap\">\r\n              {product.quantity}\r\n            </td>\r\n            <td className=\"px-2 md:px-6 py-4 md:py-2 whitespace-nowrap\">\r\n              {product.sellingPrice}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n  </>\r\n) : (\r\n  <div> <h2 className=\"text-lg font-semibold my-4\">Danh sách sản phẩm</h2> <div className=\"px-6 py-4 whitespace-nowrap\">Không có thông tin</div></div>\r\n)}\r\n{Array.isArray(cart.cart) && cart.cart.length > 0 ? (\r\n  <>\r\n   <div className=\"flex flex-col\">\r\n  <h2 className=\"text-lg font-semibold my-4\">Danh sách sản phẩm trong giỏ hàng</h2>\r\n  <div className=\"overflow-x-auto\">\r\n    <table className=\"min-w-full divide-y divide-gray-200\">\r\n      <thead className=\"bg-gray-50\">\r\n        <tr>\r\n          <th scope=\"col\" className=\"px-2 md:px-6 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider\">Tên sản phẩm</th>\r\n          <th scope=\"col\" className=\"px-2 md:px-6 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider\">Số lượng</th>\r\n          <th scope=\"col\" className=\"px-2 md:px-6 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider\">Giá</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"bg-white divide-y divide-gray-200\">\r\n        {cart.cart?.map((product, index) => (\r\n          <tr key={index} className=\"hover:bg-gray-100 cursor-pointer\">\r\n            <td className=\"px-2 md:px-6 py-4 md:py-2 whitespace-nowrap\" onClick={() => handleRemoveProduct(product)}>\r\n              {product.productName}\r\n            </td>\r\n            <td className=\"px-2 md:px-6 py-4 md:py-2 whitespace-nowrap\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"border border-gray-300 rounded px-2 py-1\"\r\n                value={newQuantities[product._id.$oid] || 1}\r\n                onChange={(e) => handleQuantityChange(e, product._id.$oid)}\r\n              />\r\n            </td>\r\n            <td className=\"px-2 md:px-6 py-4 md:py-2 whitespace-nowrap\">\r\n              {product.sellingPrice.$numberInt} Nghìn đồng\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    <div className=\"flex justify-end items-center\">\r\n    <button onClick={fetchData} className=\"bg-blue-500 text-white px-4 py-2 rounded mr-4\">Tính tiền</button>\r\n    <p className=\"py-2\">Tổng tiền: {output.TotalPrice} Nghìn đồng</p>\r\n    <button onClick={handleBuy} className=\"bg-green-500 text-white px-4 py-2 rounded ml-2\">Đặt hàng</button>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n  </>\r\n) : (\r\n  <div>\r\n    <h2 className=\"text-lg font-semibold my-4\">Danh sách sản phẩm trong giỏ hàng</h2>\r\n    <div className=\"px-6 py-4 whitespace-nowrap\">Không có thông tin</div>\r\n  </div>\r\n)}   \r\n      </>\r\n    )}\r\n     \r\n     <Modal isOpen={isOpen2} onClose={closeModal} message={message2} array={0} />\r\n  </>\r\n  \r\n  );\r\n      };  \r\n\r\n\r\nexport default MyForm;\r\n"],"names":["_ref","isOpen","onClose","message","array","isVisible","setIsVisible","useState","useEffect","_jsxs","className","concat","children","_jsx","onClick","handleClose","window","location","reload","viewBox","xmlns","d","Array","isArray","map","msg","index","MyForm","_cart$cart","app","Realm","id","process","user","setUser","newQuantities","setNewQuantities","jsonSchema","setjsonSchema","uiSchema","setuiSchema","output","setOutput","loading","setLoading","cart","setCart","openForm","setOpenForm","input","setInput","isOpen2","setIsOpen2","message2","setMessage2","val","setVal","navigate","useNavigate","refreshAccessToken","async","_app$currentUser","_app$currentUser2","currentUser","accessToken","error","_app$currentUser3","fetchData","_app$currentUser4","_findCart$","_findCart$$public","_findCart$$public$out","_findCart$2","_findCart$2$public","_findCart$2$public$in","_findCart$3","_findCart$3$public","_findCart$3$public$in","_findCart$4","_findCart$4$public","_findCart$4$public$in","functionName","findCart","callFunction","refreshCustomData","console","log","public","jsonData","_Fragment","Form","validator","schema","onSubmit","_app$currentUser5","formData","args","_app$currentUser6","result","products","length","scope","product","_app$currentUser7","response","handleAddProduct","onMouseEnter","e","target","classList","add","onMouseLeave","remove","productName","quantity","sellingPrice","_app$currentUser8","_id","$oid","handleRemoveProduct","type","value","onChange","productId","_app$currentUser9","newValue","parseInt","_app$currentUser10","handleQuantityChange","$numberInt","TotalPrice","i","Modal","closeModal"],"sourceRoot":""}