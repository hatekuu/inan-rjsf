{"version":3,"file":"static/js/894.49216586.chunk.js","mappings":"qLAKA,MA8DA,EA9DoBA,IAAsC,IAArC,SAAEC,EAAQ,QAAEC,EAAO,UAAEC,GAAUH,EAuClD,OACEI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qDAAoDC,UACjEF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CACHC,OAzCS,CACbC,KAAM,SACNC,MAAM,kCACNC,WAAY,CACVC,YAAa,CAAEH,KAAM,SAAUC,MAAO,6BACtCG,YAAa,CACXJ,KAAM,SACNC,MAAO,qBACPI,KAAM,CAAC,QAAS,SAChBC,UAAW,CAAC,QAAS,UAEvBC,cAAe,CAAEP,KAAM,SAAUC,MAAO,qEACxCO,aAAc,CAAER,KAAM,SAAUC,MAAO,iBACvCQ,SAAU,CAAET,KAAM,UAAWC,MAAO,4BAEtCS,SAAU,CAAC,cAAe,cAAe,gBAAiB,eAAgB,aA2BtEC,SAzBW,CAEfP,YAAa,CAEX,YAAa,SACb,aAAc,CACZQ,YAAa,CACX,CAAEC,MAAO,QAASC,MAAO,QACzB,CAAED,MAAO,QAASC,MAAO,YAS/BC,eAAe,EACfC,cAAc,EASVxB,SAAUA,EACVC,QAASA,EACTwB,UAAWC,EAAAA,GAAarB,UAExBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAAA,UACEK,KAAK,SACLJ,UAAU,uEAAsEC,SAE9EH,EAAY,yBAAiB,uBAIjC,E,cC1DV,MA+CA,EA/CmByB,KACjB,MAAMC,EAAM,IAAIC,EAAAA,GAAU,CAAEC,GAAIC,kCAC3B7B,EAAW8B,IAAgBC,EAAAA,EAAAA,WAAS,GACrCC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,KACVC,GAAW,GACT,IACF,MAAMA,EAAYC,UAAU,IAADC,QACjBX,EAAIY,YAAYC,qBACf,OAAHb,QAAG,IAAHA,GAAgB,QAAbW,EAAHX,EAAKY,mBAAW,IAAAD,GAAhBA,EAAkBG,aACpBR,EAAS,mBACX,EA4BF,OACE/B,EAAAA,EAAAA,KAAA,OAAAE,UAEEF,EAAAA,EAAAA,KAACwC,EAAW,CAAC3C,SA7BIsC,UACnB,IAAIpC,EAAJ,CAIA8B,GAAa,GACb,IAEE,MAAMY,EAAe,aACfC,EAAe,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUA,SAEhBC,QAAcnB,EAAIY,YAAYQ,aAAaJ,EAAaC,GAEjEI,MAAMF,EAAOG,QACb,CAAE,MAAOC,GACPC,QAAQD,MAAM,iCAAkCA,EAClD,CAAC,QACCnB,GAAa,EACf,CAfA,CAeA,EAWuC/B,QARpBkD,IAEnBC,QAAQD,MAAM,sBAAuBA,EAAM,EAMkBjD,UAAWA,KAClE,C","sources":["admin/components/AddProductForm.js","admin/products.js"],"sourcesContent":["// ProductForm.js\r\nimport React from 'react';\r\nimport Form from '@rjsf/core';\r\nimport AjvValidator from '@rjsf/validator-ajv8';\r\n\r\nconst ProductForm = ({ onSubmit, onError ,isLoading}) => {\r\n  const schema = {\r\n    type: 'object',\r\n    title:\"Form thêm sản phẩm\",\r\n    properties: {\r\n      productName: { type: 'string', title: 'Tên sản phẩm' },\r\n      productType: {\r\n        type: 'string',\r\n        title: 'Cách in ấn',\r\n        enum: ['In 2d', 'In 3d'],\r\n        enumNames: ['In 2D', 'In 3D'],\r\n      },\r\n      purchasePrice: { type: 'number', title: 'Chi phí sản xuất,giá mua(Nghìn đồng)' },\r\n      sellingPrice: { type: 'number', title: 'Giá bán' },\r\n      quantity: { type: 'integer', title: 'Số lượng' },\r\n    },\r\n    required: ['productName', 'productType', 'purchasePrice', 'sellingPrice', 'quantity'],\r\n  };\r\n  const uiSchema = {\r\n \r\n    productType: {\r\n    \r\n      'ui:widget': 'select',\r\n      'ui:options': {\r\n        enumOptions: [\r\n          { label: 'In 2D', value: 'in2d' },\r\n          { label: 'In 3D', value: 'in3d' },\r\n        ],\r\n      },\r\n    },\r\n  \r\n  };\r\n  \r\n\r\n  const formProps = {\r\n    showErrorList: true,\r\n    liveValidate: false,\r\n  };\r\n\r\n  return (\r\n    <div className=\" max-w-xl mx-auto mt-8 p-9 bg-white rounded shadow\">\r\n      <Form\r\n        schema={schema}\r\n        uiSchema={uiSchema}\r\n        {...formProps}\r\n        onSubmit={onSubmit}\r\n        onError={onError}\r\n        validator={AjvValidator}\r\n      >\r\n        <div className=\"mt-4\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n          >\r\n             {isLoading ? 'Đang nhập...' : 'Nhập kho'}\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n","import React, {  useState,useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ProductForm from './components/AddProductForm';\r\nimport * as Realm from 'realm-web';\r\n\r\nconst AddProduct = () => {\r\n  const app = new Realm.App({ id: process.env.REACT_APP_KEY });\r\nconst [isLoading, setIsLoading] = useState(false)\r\nconst navigate = useNavigate();\r\nuseEffect(()=>{\r\nfetchData();\r\n},[])\r\nconst fetchData = async()=>{\r\n    await app.currentUser.refreshAccessToken();\r\n    if(!app?.currentUser?.accessToken){\r\n      navigate('/inan-rjsf/login');\r\n    }\r\n}\r\n  const handleSubmit = async (formData) => {\r\n    if (isLoading) {\r\n      return; // Avoid pressing the button multiple times while processing\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      // Handle form data submission\r\n      const functionName = 'addProduct';\r\n      const args = formData?.formData;\r\n      \r\n       const result= await app.currentUser.callFunction(functionName,args);\r\n    \r\n    alert(result.message)\r\n    } catch (error) {\r\n      console.error('Error submitting product form:', error);\r\n    }finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleError = (error) => {\r\n    // Handle form errors\r\n    console.error('Product form error:', error);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    \r\n      <ProductForm onSubmit={handleSubmit} onError={handleError} isLoading={isLoading} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n"],"names":["_ref","onSubmit","onError","isLoading","_jsx","className","children","Form","schema","type","title","properties","productName","productType","enum","enumNames","purchasePrice","sellingPrice","quantity","required","uiSchema","enumOptions","label","value","showErrorList","liveValidate","validator","AjvValidator","AddProduct","app","Realm","id","process","setIsLoading","useState","navigate","useNavigate","useEffect","fetchData","async","_app$currentUser","currentUser","refreshAccessToken","accessToken","ProductForm","functionName","args","formData","result","callFunction","alert","message","error","console"],"sourceRoot":""}