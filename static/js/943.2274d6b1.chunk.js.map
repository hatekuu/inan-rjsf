{"version":3,"file":"static/js/943.2274d6b1.chunk.js","mappings":"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","sources":["components/Modal.js","routers/userConfig/interact/login.js"],"sourcesContent":["import React from 'react';\r\nimport './Modal.css'; // Style file for the modal\r\n\r\nconst Modal = ({ isOpen, onClose, message,array}) => {\r\n\r\n  if (!isOpen) return null;\r\n if(array===1)return(\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n    <div className=\"modal-content\" >\r\n\r\n      <div className=\"close-wrapper\">\r\n        <button className=\"close-button\" onClick={() => {onClose(); window.location.reload(true)}}>X</button>\r\n      </div>\r\n      {message?.map((message,index)=>(\r\n        <div key={index}>\r\n            {message}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>)\r\n return(\r\n  <div className=\"modal-overlay\" onClick={onClose}>\r\n  <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n    <div className=\"close-wrapper\">\r\n      <button className=\"close-button\" onClick={onClose}>X</button>\r\n    </div>\r\n\r\n  <p>{message}</p>\r\n          \r\n    \r\n\r\n  </div>\r\n</div>\r\n )\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport * as Realm from 'realm-web';\r\nimport Modal from '../../../components/Modal';\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isOpen2, setIsOpen2] = useState(false);\r\n  const [message2, setMessage2] = useState([]);\r\n  const navigate = useNavigate();\r\n  const app = useMemo(() => new Realm.App({ id: process.env.REACT_APP_KEY }), []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []); // Empty dependency array means it runs once on mount\r\n\r\n  useEffect(() => {\r\n    try {\r\n      Realm.handleAuthRedirect();\r\n    } catch (error) {\r\n      \r\n    }\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      if (app.currentUser?.customData?.type === \"normal\") {\r\n        navigate('/inan-rjsf/products/Mycart');\r\n      } else if (app.currentUser?.customData?.type === \"Admin\") {\r\n        navigate('/inan-rjsf/admin/addproduct');\r\n      }\r\n    } catch (error) {\r\n      setIsOpen2(true)\r\n      setMessage2(error.error)\r\n    }\r\n  };\r\n\r\n  const loginEmailPassword = async () => {\r\n    if (isLoading) {\r\n      return; // Avoid pressing the button multiple times while processing\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const credentials = Realm.Credentials.emailPassword(email, password);\r\n      const user = await app.logIn(credentials);\r\n      if (user.customData?.type === \"normal\") {\r\n        navigate('/inan-rjsf/products/Mycart');\r\n      } else if (user.customData?.type === \"Admin\") {\r\n        navigate('/inan-rjsf/admin/addproduct');\r\n        console.log(app.currentUser);\r\n      } else if (user.customData?.type === \"Manager\") {\r\n        navigate('/inan-rjsf/manager');\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.error;\r\n     \r\n      setIsOpen2(true)\r\n      setMessage2(errorMessage)\r\n      \r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      loginEmailPassword();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n      <div className=\"bg-white p-8 rounded shadow-md w-96 border border-gray-300\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-center\">Đăng Nhập</h2>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            className=\"w-full px-3 py-2 border rounded border-gray-300 focus:outline-none focus:border-indigo-500\"\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            onKeyDown={handleKeyPress}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n            Mật khẩu:\r\n          </label>\r\n          <input\r\n            className=\"w-full px-3 py-2 border rounded border-gray-300 focus:outline-none focus:border-indigo-500\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            onKeyDown={handleKeyPress} // Call handleKeyPress when Enter is pressed\r\n          />\r\n        </div>\r\n        <button\r\n          className={`w-full bg-indigo-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ${\r\n            isLoading ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n          onClick={loginEmailPassword}\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? 'Đang đăng nhập...' : 'Đăng nhập'}\r\n        </button>\r\n        <p className=\"mt-4 text-center\">\r\n          Chưa có tài khoản? <Link to=\"/inan-rjsf/register\" className=\"text-indigo-500\">Đăng ký</Link>\r\n        </p>\r\n        <p className=\"mt-4 text-center\">\r\n          Quên mật khẩu? <Link to=\"/inan-rjsf/resetpassword\" className=\"text-indigo-500\">Tìm mật khẩu ngay!</Link>\r\n        </p>\r\n      </div>\r\n      <Modal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["_ref","isOpen","onClose","message","array","_jsx","className","onClick","children","_jsxs","window","location","reload","map","index","e","stopPropagation","Login","email","setEmail","useState","password","setPassword","isLoading","setIsLoading","isOpen2","setIsOpen2","message2","setMessage2","navigate","useNavigate","app","useMemo","Realm","id","process","useEffect","fetchData","error","async","_app$currentUser","_app$currentUser$cust","_app$currentUser2","_app$currentUser2$cus","currentUser","customData","type","loginEmailPassword","_user$customData","_user$customData2","_user$customData3","credentials","emailPassword","user","logIn","console","log","errorMessage","handleKeyPress","event","key","htmlFor","value","onChange","target","onKeyDown","concat","disabled","Link","to","Modal"],"sourceRoot":""}